# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 639b3220dda8ba706c3ed9eba4e67b30d21156ed0f0bbaa8d9945aa6ba75f082
file:
- statement:
    prepare_statement:
    - keyword: PREPARE
    - naked_identifier: fooplan
    - bracketed:
      - start_bracket: (
      - data_type:
          keyword: int
      - comma: ','
      - data_type:
          keyword: text
      - comma: ','
      - data_type:
          keyword: bool
      - comma: ','
      - data_type:
          keyword: numeric
      - end_bracket: )
    - keyword: AS
    - statement:
        insert_statement:
        - keyword: INSERT
        - keyword: INTO
        - table_reference:
            naked_identifier: foo
        - values_clause:
            keyword: VALUES
            bracketed:
            - start_bracket: (
            - expression:
                dollar_numeric_literal: $1
            - comma: ','
            - expression:
                dollar_numeric_literal: $2
            - comma: ','
            - expression:
                dollar_numeric_literal: $3
            - comma: ','
            - expression:
                dollar_numeric_literal: $4
            - end_bracket: )
- statement_terminator: ;
- statement:
    prepare_statement:
    - keyword: PREPARE
    - naked_identifier: usrrptplan
    - bracketed:
        start_bracket: (
        data_type:
          keyword: int
        end_bracket: )
    - keyword: AS
    - statement:
        select_statement:
          select_clause:
            keyword: SELECT
            select_clause_element:
              wildcard_expression:
                wildcard_identifier:
                  star: '*'
          from_clause:
          - keyword: FROM
          - from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    naked_identifier: users
                alias_expression:
                  naked_identifier: u
          - comma: ','
          - from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    naked_identifier: logs
                alias_expression:
                  naked_identifier: l
          where_clause:
            keyword: WHERE
            expression:
            - column_reference:
              - naked_identifier: u
              - dot: .
              - naked_identifier: usrid
            - comparison_operator:
                raw_comparison_operator: '='
            - dollar_numeric_literal: $1
            - binary_operator: AND
            - column_reference:
              - naked_identifier: u
              - dot: .
              - naked_identifier: usrid
            - comparison_operator:
                raw_comparison_operator: '='
            - column_reference:
              - naked_identifier: l
              - dot: .
              - naked_identifier: usrid
            - binary_operator: AND
            - column_reference:
              - naked_identifier: l
              - dot: .
              - naked_identifier: date
            - comparison_operator:
                raw_comparison_operator: '='
            - dollar_numeric_literal: $2
- statement_terminator: ;
